{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const appSlice = createSlice({\n  name: 'application',\n  initialState: {\n    colorScheme: 'light',\n    authenticated: null,\n    userInfo: null,\n    accessToken: null,\n    isNotificationsVisible: false\n  },\n  reducers: {\n    setColorScheme: state => {\n      state.colorScheme = state.colorScheme === 'dark' ? 'light' : 'dark';\n    },\n    setAuthentication: (state, action) => {\n      state.authenticated = action.payload;\n    },\n    setUserInfo: (state, action) => {\n      state.userInfo = action.payload;\n    },\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload;\n    },\n    setNotificationsVisiblity: state => {\n      const visible = state.isNotificationsVisible;\n      state.isNotificationsVisible = !visible;\n    }\n  }\n});\nexport const {\n  setColorScheme,\n  setAccessToken,\n  setAuthentication,\n  setUserInfo,\n  setNotificationsVisiblity\n} = appSlice.actions;\nexport const changeColorSchemeAction = colorScheme => dispatch => {\n  dispatch(setColorScheme(colorScheme));\n};\nexport const setAccessTokenAction = accessToken => dispatch => {\n  dispatch(setAccessToken(accessToken));\n};\nexport const setAuthenticationAction = authenticated => dispatch => {\n  dispatch(setAuthentication(authenticated));\n};\nexport const setUserInfoAction = userInfo => dispatch => {\n  dispatch(setUserInfo(userInfo));\n};\nexport const toggleNotificationsAction = () => dispatch => {\n  dispatch(setNotificationsVisiblity());\n};\nexport default appSlice.reducer;","map":{"version":3,"names":["createSlice","axios","appSlice","name","initialState","colorScheme","authenticated","userInfo","accessToken","isNotificationsVisible","reducers","setColorScheme","state","setAuthentication","action","payload","setUserInfo","setAccessToken","setNotificationsVisiblity","visible","actions","changeColorSchemeAction","dispatch","setAccessTokenAction","setAuthenticationAction","setUserInfoAction","toggleNotificationsAction","reducer"],"sources":["C:/Users/hp/Desktop/pro/rs-banking-main/rs-banking-main/client/src/appSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const appSlice = createSlice({\n  name: 'application',\n  initialState: {\n    colorScheme: 'light',\n    authenticated: null,\n    userInfo: null,\n    accessToken: null,\n    isNotificationsVisible: false\n  },\n  reducers: {\n    setColorScheme: (state) => {\n      state.colorScheme = state.colorScheme === 'dark' ? 'light' : 'dark';\n    },\n    setAuthentication: (state, action) => {\n      state.authenticated = action.payload\n    },\n    setUserInfo: (state, action) => {\n      state.userInfo = action.payload\n    },\n    setAccessToken: (state, action) => {\n      state.accessToken = action.payload\n    },\n    setNotificationsVisiblity: (state) => {\n      const visible = state.isNotificationsVisible\n      state.isNotificationsVisible = !visible;\n    }\n  },\n\n});\n\nexport const { setColorScheme, setAccessToken, setAuthentication, setUserInfo, setNotificationsVisiblity } = appSlice.actions;\n\n\nexport const changeColorSchemeAction = colorScheme => (dispatch) => {\n  dispatch(setColorScheme(colorScheme));\n};\n\nexport const setAccessTokenAction = accessToken => dispatch => {\n  dispatch(setAccessToken(accessToken));\n};\n\nexport const setAuthenticationAction = authenticated => dispatch => {\n  dispatch(setAuthentication(authenticated));\n};\n\nexport const setUserInfoAction = userInfo => dispatch => {\n  dispatch(setUserInfo(userInfo));\n};\n\nexport const toggleNotificationsAction = () => dispatch => {\n  dispatch(setNotificationsVisiblity())\n}\n\nexport default appSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,IAAI;IACnBC,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE,IAAI;IACjBC,sBAAsB,EAAE;EAC1B,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAGC,KAAK,IAAK;MACzBA,KAAK,CAACP,WAAW,GAAGO,KAAK,CAACP,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;IACrE,CAAC;IACDQ,iBAAiB,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACN,aAAa,GAAGQ,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,WAAW,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACL,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACjC,CAAC;IACDE,cAAc,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MACjCF,KAAK,CAACJ,WAAW,GAAGM,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,yBAAyB,EAAGN,KAAK,IAAK;MACpC,MAAMO,OAAO,GAAGP,KAAK,CAACH,sBAAsB;MAC5CG,KAAK,CAACH,sBAAsB,GAAG,CAACU,OAAO;IACzC;EACF;AAEF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,cAAc;EAAEM,cAAc;EAAEJ,iBAAiB;EAAEG,WAAW;EAAEE;AAA0B,CAAC,GAAGhB,QAAQ,CAACkB,OAAO;AAG7H,OAAO,MAAMC,uBAAuB,GAAGhB,WAAW,IAAKiB,QAAQ,IAAK;EAClEA,QAAQ,CAACX,cAAc,CAACN,WAAW,CAAC,CAAC;AACvC,CAAC;AAED,OAAO,MAAMkB,oBAAoB,GAAGf,WAAW,IAAIc,QAAQ,IAAI;EAC7DA,QAAQ,CAACL,cAAc,CAACT,WAAW,CAAC,CAAC;AACvC,CAAC;AAED,OAAO,MAAMgB,uBAAuB,GAAGlB,aAAa,IAAIgB,QAAQ,IAAI;EAClEA,QAAQ,CAACT,iBAAiB,CAACP,aAAa,CAAC,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMmB,iBAAiB,GAAGlB,QAAQ,IAAIe,QAAQ,IAAI;EACvDA,QAAQ,CAACN,WAAW,CAACT,QAAQ,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMmB,yBAAyB,GAAGA,CAAA,KAAMJ,QAAQ,IAAI;EACzDA,QAAQ,CAACJ,yBAAyB,EAAE,CAAC;AACvC,CAAC;AAED,eAAehB,QAAQ,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}